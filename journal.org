* [2017-07-27 Thu]

** Recent experiences with ~no-p4~ and ~no-4~ :experience-report:

I have had a nice time using the two layouts ~twin-dexter(no-p4)~ and
~twin-dexter(no-4)~ lately.  I also have had the less radical
~twin-dexter(no-p3)~ at the ready, but I haven’t ended up needing that
lately.

This is the script that I manually run after starting up my laptop
(NixOS):

#+BEGIN_SRC shell
~/xkb/scripts/keyboard-setup "twin-dexter(no-p3)" "twin-dexter(no-p4)" "twin-dexter(no-4)"
#+END_SRC

The reason that ~twin-dexter(no-p3)~ is included is as a fallback for
when using the “4” layouts becomes too constraining or limiting.  This
was very much necessary before when I couldn’t shift windows in Xmonad
while using a “4” layout, but I am able to do that now that I have
customised Xmonad to use the numpad for shifting
windows [fn:xmonad-numpad-added].

[fn:xmonad-numpad-added]: This was added in commit r#f62477962622 (“Add
numpad keys to change betwee workspaces”, 2017-07-08).

I made ~twin-dexter(no-4)~ in order to more conveniently write in
Norwegian, because I found using compose key combinations to be
awkward.  Shifting between the two is easy since I use ~Shift2-Delete~
(~Caps Lock-Delete~), since ~Delete~ is bound to ~ISO_Next_Group~ on
that level (third level).  The only time that I find it inconvenient to
use ~twin-dexter(no-4)~ is when I have to use symbols like forward slash
and other programming-related symbols a fair bit, since these symbolses
are moved around compared to ~twin-dexter(no-p4)~.  But when I am only
writing Norwegian prose with the former layout and programming and
English with the latter, this setup feels very convenient.

The “big idea” behind the “4” layouts is to replace the numeric row with
modifiers, compose keys, and the menu key, and to move the numbers to
the “alphabetic numpad” on the left hand.  This makes all three
shift-levels very easy to access from the home row.  This is what I
thought beforehand, and it has turned out to be true when trying it out
for a good while, now.  Another change is that these are “latches”, or
“sticky keys”, which means that they are not typically held down and
pressed with another key but are instead tapped and then released before
hitting the next key.  So far, this seems to be a superior alternative
to the standard “hold then press second then release” shift behavior.

I had a lot of trouble, and still continue to have trouble with,
adjusting to use the “alphabetic numpad”.  It was really painful in the
beginning, but I feel that I persevered to a point where I am making
progress.  Things also got a lot easier lately when I learned that
“latched shift keys” can /also/ be held down in order to more easily
press multiple same-shifted symbols.  So I can hold down the relevant
shift key and write strings like ~2017~, instead of having to alternate
between tapping the relevant shift key and the key.  For some reason I
didn’t stumble upon this fact by myself by simply trying to hold down a
shift key and pressing a non-modifier key.

* [2017-08-31 Thu]

** Using dead key mappings as a poor man’s extra level

I have implemented a first version of what I have referred to as an
Extend layer variation using dead key mappings.  The support for this on
the keymapping side was implemented in r#41cf161098c3 (“Turn two keys
into a dead key”, 2017-08-30), while the bulk of the implementation (the
mappings) were implemented in r#6e9fdf9eff69 (“Make an “Extend layer” by
way of a dead key”, 2017-08-30) in the dotfiles repository.

The purpose of this was to be able to get a new effective layer which
could be accessed with a single prefix key, just like the first, second
and third shift levels for layouts like ~twin-dexter(no-p4)~ and
~twin-dexter(no-4)~.  In this way, I have a new layer which can be
accessed in the same way as the first three shift layers, namely by
pressing and releasing a key (the dead key) and then pressing any of the
regular (non-modifier, non-compose, etc.) keys.

I have also wanted to implement the Extend layer as one of the shift
layers.  I might still do that, and then these two ways to access the
layers can complement each other.

*** Problems

There are two problems so far.

1. Mouse buttons and movement does not seem to work.
2. Group switching keys does not work.

As for the first, I suspect that the compose mappings that I am using is
not powerful enough to implement things like moving the cursor by offset
coordinates.  As for the second, I have tried to find out why it doesn’t
work but with no luck.  My motivation for these mappings is that I would
be able to switch layouts without moving my hands as much as under my
present setup.  Another motivation is that all the “space” for buttons
left open enough room for four of the group switching buttons/symbols (I
only use one of them in the old and current setup).

** Yet another dead key?

I might want to use another key for a dead key.  (Geez, will I even be
able to find enough symbols to use in all these mappings?)

The key I have in mind is ~<AD12>~, which currently has this mapping in
~twin-dexter(no-p1)~ and layouts that inherit from that one:

#+BEGIN_EXAMPLE
key <AD12> { [ asciicircum, asciitilde, U0302, NoSymbol, U0303 ] };
#+END_EXAMPLE

I don’t think I need this key that much in this capacity, namely as a
normal key.  The reason for that is that I can move ~asciicircum~ and
~asciitilde~ to the second and third level of the `<AD12>` key,
respectively.  I think this would make typing the ~asciicircum~ symbol
only marginally less convenient, and it would free up room for a /lot/
of new mappings.

** Dead key layer not working

The “Extend layer” does not work in most of the applications that I am
using.  It works in Spacemacs and Xterm, but not in Firefox,
Gnome-terminal, among others.  This means that the utility is severly
diminished, since it would be of most in applications like Firefox—I
already use Evil in Spacemacs so I don’t need things like convenient
access to arrow keys in that application.

Maybe this was a failed experiment?  Maybe I should just make an Extend
layer as one of the shift levels and drop the dead key variant?
