Keyboard mappings for Xkb.

* Software needed

The Xkb utilities ~setxkbmap~ and ~xkbcomp~ are needed for
~scripts/keyboard-setup~.

* Usage

~scripts/keyboard-setup~ is a wrapper around ~setxkbmap~ that I use to
set up some of the layouts in ~xkb-tree/symbols/~.

Example usage:

#+BEGIN_SRC shell
scripts/keyboard-setup "twin-dexter(no-p5),twin-dexter(no-4)"
#+END_SRC

This sets up the keyboard to use the layouts ~twin-dexter(no-p5)~ and
~twin-dexter(no-4)~.  You can switch between layouts by pressing
~Shift+ScrollLock~.  If you have a scroll lock light indicator on your
keyboard, it will light on and off to indicate what layouts you are on.
This might make it easier to use two layouts.

* Layouts

These are the layouts that are intended for use in
~xkb-tree/symbols/twin-dexter~ as of 2017-09-01:

- ~no~ — Basic Norwegian layout.  The primary difference from the
  regular Norwegian layout on Linux is that common symbols (mostly
  ASCII) are duplicated on the “alphabetic section” on the third level
  (the level accessed by the ~AltGr~ on most European keyboards).
- ~no-nodeadkeys~ — Like ~no~, but with dead keys disabled.  This makes
  typing things like “caret” (ASCII circumflex) easier.
- ~no-p1~ — Like ~no-nodeadkeys~, but replaces the Norwegian characters
  ~Æ~, ~Ø~ and ~Å~ with characters that are useful for programming,
  namely ~)~, ~(~ and ~/~, respectively.  (This is the granddaddy of the
  other layouts—wanting to remap the Norwegian characters to symbols
  that are useful for programming was my initial motivation for
  learning about keyboard layouts under Linux (Xserver).)
- ~no-p2~ — Like ~no-p1~, but with a new level 2 shift key and more
  convenient ~Alt~ keys.
- ~no-p3~ — Like ~no-p2~, but with an “alphabetic numpad”.
- ~no-p4~ — Like ~no-p2~, but with a radically different “numeric row”.
- ~no-4~ — Norwegian version of ~no-p4~.
- ~eo-4~ — Esperanto version of `no-p4`.  Esperanto layouts use the same
  strategy as the “programming” layouts with regards to the standard
  Norwegian layouts; replace the Norwegian keys with characters that are
  useful for Esperanto.
- ~no-p5~ — A minor variation of ~no-4~.  Of no real general interest.

* Tools

The following are useful tools for working with Xkb.

- ~ckbcomp~: “compile a XKB keyboard description to a keymap suitable
  for loadkeys”.  Use this when the mapping won’t compile and you want
  better error messages.  Remember to use a relative path to the file if
  you want to try to compile a mapping in the current directory.
- ~setxkbmap~: “set the keyboard using the X Keyboard Extension”.
- ~man xkeyboard-config~: “XKB data description files”.  Really useful to
  find ready-made options like “swap Ctrl and Caps Lock”.
- ~xkbprint~: “print an XKB keyboard description”.  Print a PostScript
  file of a keyboard mapping.  The easiest way to use seems to be to
  print the current keyboard by using [[https://askubuntu.com/a/381393/136104][an “X display specification”:]]
  ~xkbprint :0 output.ps~.  You should be able to open the PostScript
  file in a PDF viewer.
- ~xkbset~: utility to set user preferences like “stickykeys” (“latch”
  in Xkb terminology), mousekeys, and so on.  This might be a useful
  complement to ~setxkbmap~ since it seems that setting latch options is
  pretty limited with ~setxkbmap~, at least according to ~man
  xkeyboard-config~.  ([[https://superuser.com/a/414535][Source]])
- ~xkbwatch~: reports the changes to the Xkb states.  This might be
  useful if you want some visual indication of things like the lock- or
  lack-state of the various shifts, for example.

* Files

- Keyboard mappings for the system is located in ~/usr/share/X11/xkb/symbols~.
- Compose mappings for X: ~/usr/share/X11/locale/en_US.UTF-8/Compose~.
- Keysymbol definitions are in: ~/usr/include/X11/keysymdef.h~.  There
  you can find what keys and symbols (characters) are named, for example
  ~XK_Home~ (home key) and ~XK_ampersand~ (~&~).

** Finding files on NixOS

The above listed files are not stored in the usual places on NixOS.  You
can use a utility like Find to search for them in the ~/nix/store/~
directory tree:

#+BEGIN_SRC shell
cd /nix/store
find -name 'keysymdef.h'
#+END_SRC

This should give you several results.

* The source repository of XKB configurations

Apparently this is where you can find the releases of the “source” of
the XKB configuration that comes installed on Linux etc.:

https://www.freedesktop.org/wiki/Software/XKeyboardConfig/

I downloaded the repository and indeed it looks similar my XKB
configuration located at ~/usr/share/X11/xkb/~.  The directory structure
looks the same, and I opened the Norwegian (~no~) keyboard mapping file
and it looked similar to the one I have on my system.

* Example of custom configurations

Adam Spiers has a repository which among other things contains custom
keymappings, keycodes, and geometry:

https://github.com/aspiers/desktop-config/tree/master/.xkb

His keymappings (the ~symbols~ directory) might be useful to look at in
order to figure out how to structure things.
