Keyboard mappings for Xkb.

* Installation or setup instructions

Copy whatever xkb files you have to the directory:

#+BEGIN_EXAMPLE
/usr/share/X11/xkb/symbols
#+END_EXAMPLE

Remember to remove the files in this directory (/the cache/ it seems to
be called) when you have made modifications to one of the files in that
directory:

#+BEGIN_EXAMPLE
/var/lib/xkb/
#+END_EXAMPLE

Set keymappings with Setxkbmap.  For example:

#+BEGIN_SRC shell
setxkbmap no_p1
#+END_SRC

If there is some file named ~no_p1~ in ~/usr/share/X11/xkb/symbols~.

Or set the ~nodeadkeys~ variant:

#+BEGIN_SRC shell
setxkbmap "no_p1(nodeadkeys)"
#+END_SRC

The quotes are necessary because of the shell.

** Other dependencies and restarting the X session

The setup that I use with ~no_p1~ depends on a script ~keyboard-setup~
to run.  Furthermore, probably because of the dependency on the [[https://github.com/alols/xcape][Xcape]]
program (if I recall correctly), the X server needs to be restarted in
case you use Setxbkmap to switch the mapping from ~no_p1~.  So if you
have the script ~keyboard-setup~ run on login to the X session, and then
run this at some point:

#+BEGIN_SRC shell
setxkbmap no
setxkbmap "no_p1(nodeadkeys)"
#+END_SRC

That mapping will not work properly.

In order to restart the X session, run:

#+BEGIN_SRC shell
sudo restart lightdm
#+END_SRC

This should take you back to the login screen.

* Tools

The following are useful tools for working with Xkb.

- ~ckbcomp~: “compile a XKB keyboard description to a keymap suitable
  for loadkeys”.  Use this when the mapping won’t compile and you want
  better error messages.  Remember to use a relative path to the file if
  you want to try to compile a mapping in the current directory.
- ~setxkbmap~: “set the keyboard using the X Keyboard Extension”.
- ~man xkeyboard-config~: “XKB data description files”.  Really useful to
  find ready-made options like “swap Ctrl and Caps Lock”.
- ~xkbprint~: “print an XKB keyboard description”.  Print a PostScript
  file of a keyboard mapping.  The easiest way to use seems to be to
  print the current keyboard by using [[https://askubuntu.com/a/381393/136104][an “X display specification”:]]
  ~xkbprint :0 output.ps~.  You should be able to open the PostScript
  file in a PDF viewer.
- ~xkbset~: utility to set user preferences like “stickykeys” (“latch”
  in Xkb terminology), mousekeys, and so on.  This might be a useful
  complement to ~setxkbmap~ since it seems that setting latch options is
  pretty limited with ~setxkbmap~, at least according to ~man
  xkeyboard-config~.  ([[https://superuser.com/a/414535][Source]])

* Files

- Keyboard mappings for the system is located in ~/usr/share/X11/xkb/symbols~.
- Compose mappings for X: ~/usr/share/X11/locale/en_US.UTF-8/Compose~.
- Keysymbol definitions are in: ~/usr/include/X11/keysymdef.h~.  There
  you can find what keys and symbols (characters) are named, for example
  ~XK_Home~ (home key) and ~XK_ampersand~ (~&~).

* The source repository of XKB configurations

Apparently this is where you can find the releases of the “source” of
the XKB configuration that comes installed on Linux etc.:

https://www.freedesktop.org/wiki/Software/XKeyboardConfig/

I downloaded the repository and indeed it looks similar my XKB
configuration located at ~/usr/share/X11/xkb/~.  The directory structure
looks the same, and I opened the Norwegian (~no~) keyboard mapping file
and it looked similar to the one I have on my system.

* Example of custom configurations

Adam Spiers has a repository which among other things contains custom
keymappings, keycodes, and geometry:

https://github.com/aspiers/desktop-config/tree/master/.xkb

His keymappings (the ~symbols~ directory) might be useful to look at in
order to figure out how to structure things.
