// Fairly complete set of symbol interpretations
// to provide reasonable default behavior

default partial xkb_compatibility "default"  {
    virtual_modifiers LevelThree,AltGr,Alt,Super;

    interpret.repeat= False;
    setMods.clearLocks= True;
    latchMods.clearLocks= True;
    latchMods.latchToLock= True;

    interpret ISO_Level2_Latch {
	action= LatchMods(modifiers=Shift);
    };

    interpret ISO_Level2_Latch+Shift {
	useModMapMods= level1;
	action= LatchMods(modifiers=Shift);
    };

    interpret ISO_Level3_Shift+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= SetMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Shift {
	action= SetMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Latch+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= LatchMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Latch {
	action= LatchMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Lock+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= LockMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Lock {
	action= LockMods(modifiers=LevelThree);
    };

    interpret ISO_Group_Latch {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LatchGroup(group=2);
    };

    // Repurposed as latch group 3 key.
    // NOTE I don’t know if this section i necessary.  I have to set the
    // `action` in `twin-dexter(group-3-experimental)`, anyway.
    interpret ISO_Next_Group {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LatchGroup(group=3);
    };

    interpret ISO_Prev_Group {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LockGroup(group=-1);
    };
    interpret ISO_First_Group {
	action= LockGroup(group=1);
    };

    interpret ISO_Last_Group {
	action= LockGroup(group=2);
    };

    indicator "Group 2" {
	!allowExplicit;
	groups= All-Group1;
    };

    indicator "Shift lvl 3 Lock" {
        !allowExplicit;
        whichModState= Locked;
        modifiers= mod5;
    };

    indicator "Shift lvl 5 Lock" {
        !allowExplicit;
        whichModState= Locked;
        modifiers= mod3;
    };

    // § Unlock locks
    //
    // Use Farsi keysyms since they are otherwise useless (to me).
    // Farsi_0 is used for redirection.
    //
    // §2 Implementation and dependency
    //
    // Dependency: https://bitbucket.org/Guildenstern/dotfiles/src/master/xbindkeys/.xbindkeysrc
    //
    // `Farsi_0` is redirected to the appropriate keysym using a
    // Xbindkeys daemon.  Xbindkeys watches for `Farsi_0` keypresses
    // and uses Xdotool to simulate a keypress which then gets
    // interpreted here so that the appropriate locks are unlocked.  As
    // an example, here is the implementation for `ctrl+alt+Farsi_0`:
    //
    //     # ctrl+alt+Farsi_0
    //     "xdotool key --clearmodifiers Farsi_3"
    //       Control + Alt + Farsi_0
    //
    // ⁂
    //
    // ctrl+Farsi_0
    interpret Farsi_1 {
	action=LockMods(modifiers=Control);
    };
     // alt+Farsi_0
    interpret Farsi_2 {
	action=LockMods(modifiers=Alt);
    };
    // ctrl+alt+Farsi_0
    interpret Farsi_3 {
	action=LockMods(modifiers=Control+Alt);
    };
    // super+Farsi_0
    interpret Farsi_4 {
	action=LockMods(modifiers=Super);
    };
    // ctrl+super+Farsi_0
    interpret Farsi_5 {
	action=LockMods(modifiers=Control+Super);
    };
    // alt+super+Farsi_0
    interpret Farsi_6 {
	action=LockMods(modifiers=Alt+Super);
    };
    // ctrl+alt+super+Farsi_0
    interpret Farsi_7 {
	action=LockMods(modifiers=Control+Alt+Super);
    };
};
