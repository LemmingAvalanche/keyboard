// Fairly complete set of symbol interpretations
// to provide reasonable default behavior

default partial xkb_compatibility "default"  {
    virtual_modifiers LevelThree,AltGr,Alt,Super;

    interpret.repeat= False;
    setMods.clearLocks= True;
    latchMods.clearLocks= True;
    latchMods.latchToLock= True;

    interpret ISO_Level2_Latch {
	action= LatchMods(modifiers=Shift);
    };

    interpret ISO_Level2_Latch+Shift {
	useModMapMods= level1;
	action= LatchMods(modifiers=Shift);
    };

    interpret ISO_Level3_Shift+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= SetMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Shift {
	action= SetMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Latch+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= LatchMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Latch {
	action= LatchMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Lock+Any {
	useModMapMods= level1;
	virtualModifier= LevelThree;
	action= LockMods(modifiers=LevelThree);
    };

    interpret ISO_Level3_Lock {
	action= LockMods(modifiers=LevelThree);
    };

    interpret ISO_Group_Latch {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LatchGroup(group=2);
    };

    // Repurposed as latch group 3 key.
    // NOTE I don’t know if this section i necessary.  I have to set the
    // `action` in `twin-dexter(group-3-experimental)`, anyway.
    interpret ISO_Next_Group {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LatchGroup(group=3);
    };

    interpret ISO_Prev_Group {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= LockGroup(group=-1);
    };
    interpret ISO_First_Group {
	action= LockGroup(group=1);
    };

    interpret ISO_Last_Group {
	action= LockGroup(group=2);
    };

    // § Backspace Word
    //
    // Use redirection to a keycode mapped to the keysym `BackSpace` and
    // activate `Control`.  `Ctrl+BackSpace` is mapped to “kill word
    // backwards” in most applications.
    //
    // `Farsi_0` is an arbitrary keysym that I have no other need for.
    // The actual keysym doesn’t matter since it is only used for
    // redirection.
    //
    // `<I120>` is `#define KEY_MACRO` according to
    // `xkb/keycodes/evdev`.  Just a keycode that I have no other use
    // for.
    interpret Farsi_0 {
	interpret.repeat = True;
	action = redirectkey(key=<I120>, modifiers=Control);
    };

    indicator "Group 2" {
	!allowExplicit;
	groups= All-Group1;
    };

    indicator "Shift lvl 3 Lock" {
        !allowExplicit;
        whichModState= Locked;
        modifiers= mod5;
    };

    indicator "Shift lvl 5 Lock" {
        !allowExplicit;
        whichModState= Locked;
        modifiers= mod3;
    };

};
